name: Create Tag & Create Release & Modify Change Log
run-name: ${{ github.actor }} creating a release!
on:
  push:
    branches:
      - main
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: 5.x
      - id: determine_version
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          additionalArguments: /overrideconfig mode=Mainline
          includePrerelease: true
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install Dependencies
        run: npm i
        shell: bash
      - name: List Dependencies
        run: npm list --all > dependencies.txt
        shell: bash
      - name: Collect Dependencies
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Dependencies
          path: dependencies.txt
      - name: Collect Dependency Updates
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Dependencies Updates
          path: dependencyUpdates.txt
      - name: Test
        run: npm test
        shell: bash
      - name: Build
        run: npm run build
        shell: bash
      - name: "✏️ Generate release changelog"
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "previous_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> $GITHUB_ENV
      - name: Get the changelog
        run: echo "${{ steps.changelog.outputs.changelog }}"
      - name: Package
        run: |-
          SOURCEPATH=.
          OUTPUTPATH=.
          # If there is a build directory, assume that is what we want to package
          if [[ -d "build" ]]; then
            SOURCEPATH=build
        shell: bash
      - name: Tag Release
        uses: mathieudutour/github-tag-action@v6.0
        with:
          custom_tag: ${{ steps.determine_version.outputs.semVer }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: create_release
        name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
          release_name: Release ${{ steps.determine_version.outputs.semVer }} Run ${{ github.run_number }}
          draft: 'false'
          prerelease: 'false'
          body: |
            All notable changes to this project will be documented in this file.
            ${{ steps.changelog.outputs.changelog }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: TaskMasterMain.${{ steps.determine_version.outputs.semVer }}.zip
          asset_name: TaskMasterMain.${{ steps.determine_version.outputs.semVer }}.zip
          asset_content_type: application/octet-stream
permissions:
  contents: write
  issues: write
  pull-requests: write
