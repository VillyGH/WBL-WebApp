name: Update PR Title and Description

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  update-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed to compare with base branch

      - name: Get PR info
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            return {
              title: pr.title,
              number: pr.number,
              baseRef: pr.base.ref,
              headRef: pr.head.ref,
            };

      - name: Get version from package.json
        id: package
        run: |
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Verify package.json version was changed
        run: |
          git fetch origin ${{ steps.pr.outputs.baseRef }}
          if git diff --name-only origin/${{ steps.pr.outputs.baseRef }}...HEAD | grep -q "package.json"; then
            if git diff origin/${{ steps.pr.outputs.baseRef }}...HEAD -- package.json | grep -q '"version"'; then
              echo "package.json version was changed."
            else
              echo "Error: package.json must have a version change."
              exit 1
            fi
          else
            echo "Error: package.json not modified."
            exit 1

      - name: Update PR title and description
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const version = '${{ steps.package.outputs.version }}';
            const prNumber = ${{ steps.pr.outputs.number }};

            // Get commit messages between base and head
            const commitMessages = execSync('git log origin/${{ steps.pr.outputs.baseRef }}..HEAD --pretty=format:"- %s"', { encoding: 'utf8' });

            const newTitle = `Update to v${version}`;
            const newBody = `### Changes:\n\n${commitMessages}`;

            await github.rest.pu
