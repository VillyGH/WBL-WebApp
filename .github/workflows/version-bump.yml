name: Auto bump version and update PR

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  auto-update-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check for changes
        id: check_changes
        run: |
          git fetch origin
          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes."
          else
            echo "Changes detected."
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Bump patch version in package.json
        if: steps.check_changes.outputs.has_changes == 'true'
        id: bump
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          if [ "$patch" -eq 10 ]; then
            patch=0
            minor=$((minor + 1))
          fi
          if [ "$minor" -eq 10 ]; then
            minor=0
            major=$((major + 1))
          fi
          if [ "$patch" -eq 0 ] && [ "$minor" -ne 0 -o "$major" -ne 0 ]; then
            NEW_VERSION="$major.$minor.$patch"
          else
            NEW_VERSION="$major.$minor.$((patch + 1))"
          fi
          jq --arg v "$NEW_VERSION" '.version = $v' package.json > tmp.json && mv tmp.json package.json
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit bumped version
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json
          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes to commit. Skipping push."
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          git commit -m "chore: bump version to v${{ steps.bump.outputs.new_version }}"
          git push

      - name: Get PR number and commits
        id: pr
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            return {
              number: pr.number,
              base: pr.base.ref,
              head: pr.head.ref
            };

      - name: Get list of commit messages
        id: messages
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git fetch origin ${{ steps.pr.outputs.base }}
          MESSAGES=$(git log origin/${{ steps.pr.outputs.base }}..HEAD --pretty=format:"- %s")
          echo "messages<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update PR title and description
        uses: actions/github-script@v7
        if: steps.check_changes.outputs.has_changes == 'true'
        with:
          script: |
            const prNumber = ${{ steps.pr.outputs.number }};
            const version = "${{ steps.bump.outputs.new_version }}";
            const body = `### Changes in v${version}\n\n${{ steps.messages.outputs.messages }}`;

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              title: `Update to v${version}`,
              body
            });
